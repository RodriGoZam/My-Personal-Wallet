{"remainingRequest":"/Users/abrahan/Desktop/JS/backup/My-Personal-Wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abrahan/Desktop/JS/backup/My-Personal-Wallet/src/components/BotonTransacciones.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/abrahan/Desktop/JS/backup/My-Personal-Wallet/src/components/BotonTransacciones.vue","mtime":1557445651869},{"path":"/Users/abrahan/Desktop/JS/backup/My-Personal-Wallet/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/abrahan/Desktop/JS/backup/My-Personal-Wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abrahan/Desktop/JS/backup/My-Personal-Wallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props: {\n        tipo: String,\n        categorias: Array,\n        cuenta: Object\n    },\n    data () {\n        return {\n            sheet: false,\n            fecha: new Date().toISOString().substr(0, 10),\n            categoria: '',\n            monto: 0\n        }\n    },\n    methods: {\n        agregar () {\n            try {\n                if ( this.categoria === '') {\n                    throw  new Error (\"Seleccione una categoria\")\n                } else if (this.monto <= 0) {\n                    throw  new Error (\"Ingrese un monto mayor a 0\")\n                }\n                switch (this.tipo) {\n                    case 'Ingreso':\n                    this.cuenta.fondos = Number(this.monto) + Number(this.cuenta.fondos)\n                    this.$store.dispatch('agregarIngreso',\n                     {cuenta: this.cuenta.nombre, fecha: this.fecha, monto: this.monto, categoria: this.categoria})\n                     break;\n                    case 'Egreso':\n                    if (Number(this.monto) > Number(this.cuenta.fondos)) {\n                        throw  new Error (\"Saldo insuficiente\")\n                    }\n                    this.cuenta.fondos = Number(this.cuenta.fondos) - Number(this.monto)\n                    this.$store.dispatch('agregarEgreso',\n                     {cuenta: this.cuenta.nombre, fecha: this.fecha, monto: this.monto, categoria: this.categoria})\n                    break;\n                }\n                this.$store.dispatch('actualizarSaldo', this.cuenta)\n                this.generarAlerta({mensaje: 'Agregado exitosamente', tipo: 'success', visible: true, color: '#64C195'})\n            } catch (error) {\n                this.generarAlerta({mensaje: error, tipo: 'error', visible: true, color: 'red'})\n            } finally {\n                this.sheet = false\n                this.fecha = new Date().toISOString().substr(0, 10)\n                this.categoria= ''\n                this.monto= 0\n            }\n        },\n        generarAlerta (alerta) {\n            this.$emit('setAlerta', alerta)\n        }\n    } \n}\n",{"version":3,"sources":["BotonTransacciones.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BotonTransacciones.vue","sourceRoot":"src/components","sourcesContent":["<template>\n        <v-bottom-sheet v-model=\"sheet\">\n            <template v-slot:activator>\n                <v-btn\n                    color=\"#64C195\"\n                    dark\n                    round\n                >\n                    +{{tipo}}\n                </v-btn>\n            </template>\n                    <v-list>\n                        <p class=\"text-md-center\">Nuevo {{tipo}}</p>\n                        <v-layout column>\n                            <v-combobox\n                                :items=\"categorias\"\n                                label=\"Seleccione una categoria\"\n                                chips\n                                autofocus\n                                type=\"button\"\n                                class=\"seleccion\"\n                                v-model=\"categoria\"\n                            >\n                            </v-combobox>\n                            <v-text-field\n                                class=\"input\"\n                                label=\"Monto\"\n                                type=\"number\"\n                                v-model=\"monto\"\n                            ></v-text-field>\n                            <v-menu\n                                ref=\"menu\"\n                                :close-on-content-click=\"false\"\n                                :nudge-right=\"40\"\n                                :return-value.sync=\"fecha\"\n                                lazy\n                                transition=\"scale-transition\"\n                                offset-y\n                                full-width\n                                min-width=\"290px\"\n                            >\n                                <template v-slot:activator=\"{ on }\">\n                                    <v-text-field\n                                        v-model=\"fecha\"\n                                        label=\"Picker in menu\"\n                                        prepend-icon=\"event\"\n                                        readonly\n                                        v-on=\"on\"\n                                        class=\"calendario\"\n                                    ></v-text-field>\n                                </template>\n                                <v-date-picker v-model=\"fecha\" no-title scrollable>\n                                    <v-spacer></v-spacer>\n                                    <v-btn flat color=\"primary\" @click=\"menu = false\">Cancel</v-btn>\n                                    <v-btn flat color=\"primary\" @click=\"$refs.menu.save(fecha)\">OK</v-btn>\n                                </v-date-picker>\n                            </v-menu>\n                            <v-btn\n                                color=\"#64C195\"\n                                dark\n                                round\n                                class=\"input\"\n                                @click=\"agregar\"\n                            >\n                                Agregar\n                            </v-btn>\n                        </v-layout>\n                    </v-list>\n        </v-bottom-sheet>\n</template>\n<script>\nexport default {\n    props: {\n        tipo: String,\n        categorias: Array,\n        cuenta: Object\n    },\n    data () {\n        return {\n            sheet: false,\n            fecha: new Date().toISOString().substr(0, 10),\n            categoria: '',\n            monto: 0\n        }\n    },\n    methods: {\n        agregar () {\n            try {\n                if ( this.categoria === '') {\n                    throw  new Error (\"Seleccione una categoria\")\n                } else if (this.monto <= 0) {\n                    throw  new Error (\"Ingrese un monto mayor a 0\")\n                }\n                switch (this.tipo) {\n                    case 'Ingreso':\n                    this.cuenta.fondos = Number(this.monto) + Number(this.cuenta.fondos)\n                    this.$store.dispatch('agregarIngreso',\n                     {cuenta: this.cuenta.nombre, fecha: this.fecha, monto: this.monto, categoria: this.categoria})\n                     break;\n                    case 'Egreso':\n                    if (Number(this.monto) > Number(this.cuenta.fondos)) {\n                        throw  new Error (\"Saldo insuficiente\")\n                    }\n                    this.cuenta.fondos = Number(this.cuenta.fondos) - Number(this.monto)\n                    this.$store.dispatch('agregarEgreso',\n                     {cuenta: this.cuenta.nombre, fecha: this.fecha, monto: this.monto, categoria: this.categoria})\n                    break;\n                }\n                this.$store.dispatch('actualizarSaldo', this.cuenta)\n                this.generarAlerta({mensaje: 'Agregado exitosamente', tipo: 'success', visible: true, color: '#64C195'})\n            } catch (error) {\n                this.generarAlerta({mensaje: error, tipo: 'error', visible: true, color: 'red'})\n            } finally {\n                this.sheet = false\n                this.fecha = new Date().toISOString().substr(0, 10)\n                this.categoria= ''\n                this.monto= 0\n            }\n        },\n        generarAlerta (alerta) {\n            this.$emit('setAlerta', alerta)\n        }\n    } \n}\n</script>\n<style scoped>\n.calendario {\n    width: 30%;\n    margin-left: 35%;\n}\n.seleccion {\n    width: 80%;\n    margin-left: 10%;\n}\n.input {\n    width: 30%;\n    margin-left: 35%;\n}\n</style>\n"]}]}